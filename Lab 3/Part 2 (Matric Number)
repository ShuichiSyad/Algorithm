    
    
    public static void main(String[] args) {
        int[] A = {2,3,4,5,6,7,8,9};
        int min=A[0],max=A[0];
        for(int i:A){
            min = (min>i) ? i : min;
            max = (max<i) ? i: max;
        }
        int missingNum = missingInteger(A,0,A.length-1,min,max);
        System.out.println("Miss : "+missingNum);
    }
    
        public static int missingInteger(int[] A,int first,int last,int min,int max){
        int median = (min+max)/2;
        int missing = 0;
        boolean exist = false;
        for(int i=first;i<=last;i++)
            if(median==A[i]){
                missing = i;
                exist = true;
                break;
            }
        if(!exist)
            return median;
        swap(A,first,missing);
        int pivot = partition(A,first,last);
        int sizeB = pivot-first;// A[start..pivot-1] = B
        if(sizeB<median-min){
            return missingInteger(A,first,pivot-1,min,median-1);
        }else{
            return missingInteger(A,pivot+1,last,median+1,max);
        }
    }
    
     public static void swap(int A[],int i,int j){
        int tmp = A[i];
        A[i] = A[j];
        A[j] = tmp;
    }
     
     public static int partition(int A[],int p,int q){
        int x = A[p];
        int i = p;
        for(int j=p+1;j<=q;j++){
            if(A[j]<=x){
                i++;
                swap(A,i,j);
            }
        }
        swap(A,p,i);
        return i;
        }
